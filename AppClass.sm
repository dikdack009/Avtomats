// -*- tab-width: 4; -*-
//
// The contents of this file are subject to the Mozilla Public
// License Version 1.1 (the "License"); you may not use this file
// except in compliance with the License. You may obtain a copy of
// the License at http://www.mozilla.org/MPL/
//
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
//
// The Original Code is State Machine Compiler (SMC).
//
// The Initial Developer of the Original Code is Charles W. Rapp.
// Portions created by Charles W. Rapp are
// Copyright (C) 2000 - 2003 Charles W. Rapp.
// All Rights Reserved.
//
// Contributor(s):
//      Port to Python by Francois Perrad, francois.perrad@gadz.org
//
// State Machine
//	This state machine is recognizes the regular expression 0*1*.
//
// RCS ID
// $Id$
//
// CHANGE LOG
// $Log$
// Revision 1.1  2005/05/28 17:48:29  cwrapp
// Added Python examples 1 - 4 and 7.
//
//

%start Map1::Start
%class AppClass

%map Map1
%%
// State		Transition		End State		Action(s)

Start{
                StringTitle     Title           {}
}

Title{
                Stick           FirstDiv        {}
}

FirstDiv{
                Server           ID             {}
}

ID{
                Stick            SecondDiv      {}
}

SecondDiv{
                Digit19          FirstOkt              {MakeCurrentOkt();}
                Zero             FirstOktSpecial       {}
}

FirstOktSpecial{
                Dot             FirstDot        {}
}

FirstOkt{
                Digit19                           FirstOkt        {MakeCurrentOkt();}
                Zero                              FirstOkt        {MakeCurrentOkt();}
                Dot [ctxt.isValid()]              FirstDot        {MakeCurrentOktNull();}
}

FirstDot{
                Digit19          SecondOkt              {MakeCurrentOkt();}
                Zero             SecondOktSpecial       {}
}

SecondOktSpecial{
                Dot              SecondDot              {}
}

SecondOkt{
                Digit19                           SecondOkt        {MakeCurrentOkt();}
                Zero                              SecondOkt        {MakeCurrentOkt();}
                Dot [ctxt.isValid()]              SecondDot        {MakeCurrentOktNull();}
}

SecondDot{
                Digit19          ThirdOkt              {MakeCurrentOkt();}
                Zero             ThirdOktSpecial       {}
}

ThirdOktSpecial{
                Dot              ThirdDot              {}
}

ThirdOkt{
                Digit19                           ThirdOkt        {MakeCurrentOkt();}
                Zero                              ThirdOkt        {MakeCurrentOkt();}
                Dot [ctxt.isValid()]              ThirdDot        {MakeCurrentOktNull();}
}

ThirdDot{
                Digit19          FourthOkt              {MakeCurrentOkt();}
                Zero             FourthOktSpecial       {}
}

FourthOktSpecial{
                Stick              ThirdDiv               {}
}

FourthOkt{
                Digit19                           FourthOkt        {MakeCurrentOkt();}
                Zero                              FourthOkt        {MakeCurrentOkt();}
                Stick [ctxt.isValid()]            ThirdDiv         {MakeCurrentOktNull();}

}

ThirdDiv{
                Digit19          Port                   {MakePort();}
}

Port{
                Digit19                     Port                   {MakePort();}
                Zero                        Port                   {MakePort();}
                Stick [ctxt.isPortValid()]  FourthDiv              {}
}

FourthDiv{
                Slash             Cool            {}
}

Cool{
                EOS                OK              {Acceptable();}
}

OK{

}

Error{

}

Default{
                Unknown         Error           {Unacceptable();}
                StringTitle     Error           {Unacceptable();}
                Slash           Error           {Unacceptable();}
                Digit19         Error           {Unacceptable();}
                Zero            Error           {Unacceptable();}
                Stick           Error           {Unacceptable();}
                Dot             Error           {Unacceptable();}
                Server          Error           {Unacceptable();}
                EOS             Error           {Unacceptable();}
}

%%
